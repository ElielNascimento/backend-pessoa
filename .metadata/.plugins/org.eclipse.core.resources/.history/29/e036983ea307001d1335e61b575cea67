package br.com.backendattornatus.api.endereco;

import java.io.Serializable;
import java.util.Optional;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.data.domain.Page;
import org.springframework.data.domain.Pageable;
import org.springframework.stereotype.Service;

@Service
public class EnderecoService implements Serializable {
	private static final long serialVersionUID = 1L;

	@Autowired
	private EnderecoRepository enderecoRepository;

	public Page<EnderecoModel> listarPessoas(Pageable pageable) {
		Page<EnderecoModel> response = enderecoRepository.findAll(pageable);
		return response;
	}

	public EnderecoModel salvarPessoa(EnderecoModel pessoaModel) {
		return enderecoRepository.save(pessoaModel);
	}

	public Optional<EnderecoModel> buscarPessoaPeloId(Long id) throws Exception {
		Optional<EnderecoModel> pessoa = enderecoRepository.findById(id);

		if (pessoa.isPresent()) {
			return pessoa;
		} else {
			throw new Exception("Você esta tentando buscar uma pessoa que não existe");
		}
	}

	public EnderecoModel atualizarDadosPessoa(Long id, EnderecoModel newEndereco) {
		EnderecoModel endereco = enderecoRepository.findById(id).get();
		endereco.setNome(newEndereco.getNome());
		endereco.setCidade(newEndereco.getCidade());
		endereco = pessoaRepository.save(pessoa);
		return pessoa;

	}

	public void deletarPessoa(Long id) {
		pessoaRepository.deleteById(id);
	}

}
